{"ast":null,"code":"var _jsxFileName = \"/home/nishitaprajapati/Desktop/Simform/React-Demo-App/src/components/Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Tooltip } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TooltipItem = props => {\n  _s();\n\n  const {\n    item,\n    id\n  } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: id,\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: item.placement,\n      isOpen: tooltipOpen,\n      target: id,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TooltipItem, \"W4bzAaoI73SwFEIR2Qbo7WjEE4o=\");\n\n_c = TooltipItem;\n\nconst tooltip = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [{\n      placement: \"right\",\n      text: \"right\"\n    }, {\n      placement: \"right\",\n      text: \"right\"\n    }, {\n      placement: \"right\",\n      text: \"right\"\n    }, {\n      placement: \"right\",\n      text: \"right\"\n    }].map((tooltip, id) => {\n      return /*#__PURE__*/_jsxDEV(TooltipItem, {\n        item: tooltip,\n        id: id\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"TooltipItem\");","map":{"version":3,"sources":["/home/nishitaprajapati/Desktop/Simform/React-Demo-App/src/components/Tooltip.js"],"names":["React","useState","Button","Tooltip","TooltipItem","props","item","id","tooltipOpen","setTooltipOpen","toggle","placement","tooltip","text","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAeF,KAArB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMS,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAED,EAAZ;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,SAAS,EAAED,IAAI,CAACK,SADlB;AAEE,MAAA,MAAM,EAAEH,WAFV;AAGE,MAAA,MAAM,EAAED,EAHV;AAIE,MAAA,MAAM,EAAEG;AAJV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;GAAMN,W;;KAAAA,W;;AAqBN,MAAMQ,OAAO,GAAGP,KAAK,IAAI;AACvB,sBACE;AAAA,cACG,CACC;AACIM,MAAAA,SAAS,EAAE,OADf;AAEIE,MAAAA,IAAI,EAAE;AAFV,KADD,EAKC;AACIF,MAAAA,SAAS,EAAE,OADf;AAEIE,MAAAA,IAAI,EAAE;AAFV,KALD,EASC;AACIF,MAAAA,SAAS,EAAE,OADf;AAEIE,MAAAA,IAAI,EAAE;AAFV,KATD,EAaC;AACIF,MAAAA,SAAS,EAAE,OADf;AAEIE,MAAAA,IAAI,EAAE;AAFV,KAbD,EAiBCC,GAjBD,CAiBK,CAACF,OAAD,EAAUL,EAAV,KAAiB;AACrB,0BAAO,QAAC,WAAD;AAAsB,QAAA,IAAI,EAAEK,OAA5B;AAAqC,QAAA,EAAE,EAAEL;AAAzC,SAAkBA,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAnBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;AA2BA,eAAeJ,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Tooltip } from \"reactstrap\";\n\nconst TooltipItem = props => {\n  const { item, id } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <span>\n      <Button id={id}>\n        {id}\n      </Button>\n      <Tooltip\n        placement={item.placement}\n        isOpen={tooltipOpen}\n        target={id}\n        toggle={toggle}>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst tooltip = props => {\n  return (\n    <div>\n      {[\n        {\n            placement: \"right\",\n            text: \"right\"\n        },\n        {\n            placement: \"right\",\n            text: \"right\"\n        },\n        {\n            placement: \"right\",\n            text: \"right\"\n        },\n        {\n            placement: \"right\",\n            text: \"right\"\n        }\n      ].map((tooltip, id) => {\n        return <TooltipItem key={id} item={tooltip} id={id} />;\n      })}\n    </div>\n  );\n};\n\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}