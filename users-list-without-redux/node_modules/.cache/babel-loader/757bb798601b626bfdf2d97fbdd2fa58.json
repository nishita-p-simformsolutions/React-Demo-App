{"ast":null,"code":"var _jsxFileName = \"/home/nishitaprajapati/Desktop/Simform/React-Demo-App/src/components/Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Tooltip } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TooltipItem = props => {\n  _s();\n\n  const {\n    item,\n    id\n  } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"mr-1\",\n      color: \"secondary\",\n      id: \"Tooltip-\" + id,\n      children: item.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: item.placement,\n      isOpen: tooltipOpen,\n      target: \"Tooltip-\" + id,\n      toggle: toggle,\n      children: \"Tooltip Content!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TooltipItem, \"W4bzAaoI73SwFEIR2Qbo7WjEE4o=\");\n\n_c = TooltipItem;\n\nconst tooltip = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [{\n      placement: \"top\",\n      text: \"Top\"\n    }, {\n      placement: \"bottom\",\n      text: \"Bottom\"\n    }, {\n      placement: \"left\",\n      text: \"Left\"\n    }, {\n      placement: \"right\",\n      text: \"Right\"\n    }].map((tooltip, i) => {\n      return /*#__PURE__*/_jsxDEV(TooltipItem, {\n        item: tooltip,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"TooltipItem\");","map":{"version":3,"sources":["/home/nishitaprajapati/Desktop/Simform/React-Demo-App/src/components/Tooltip.js"],"names":["React","useState","Button","Tooltip","TooltipItem","props","item","id","tooltipOpen","setTooltipOpen","toggle","text","placement","tooltip","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAeF,KAArB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMS,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAC,WAA/B;AAA2C,MAAA,EAAE,EAAE,aAAaD,EAA5D;AAAA,gBACGD,IAAI,CAACK;AADR;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,SAAS,EAAEL,IAAI,CAACM,SADlB;AAEE,MAAA,MAAM,EAAEJ,WAFV;AAGE,MAAA,MAAM,EAAE,aAAaD,EAHvB;AAIE,MAAA,MAAM,EAAEG,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArBD;;GAAMN,W;;KAAAA,W;;AAuBN,MAAMS,OAAO,GAAGR,KAAK,IAAI;AACvB,sBACE;AAAA,cACG,CACC;AACEO,MAAAA,SAAS,EAAE,KADb;AAEED,MAAAA,IAAI,EAAE;AAFR,KADD,EAKC;AACEC,MAAAA,SAAS,EAAE,QADb;AAEED,MAAAA,IAAI,EAAE;AAFR,KALD,EASC;AACEC,MAAAA,SAAS,EAAE,MADb;AAEED,MAAAA,IAAI,EAAE;AAFR,KATD,EAaC;AACEC,MAAAA,SAAS,EAAE,OADb;AAEED,MAAAA,IAAI,EAAE;AAFR,KAbD,EAiBCG,GAjBD,CAiBK,CAACD,OAAD,EAAUE,CAAV,KAAgB;AACpB,0BAAO,QAAC,WAAD;AAAqB,QAAA,IAAI,EAAEF,OAA3B;AAAoC,QAAA,EAAE,EAAEE;AAAxC,SAAkBA,CAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAnBA;AADH,mBADF;AAwBD,CAzBD;;AA2BA,eAAeZ,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Tooltip } from \"reactstrap\";\n\nconst TooltipItem = props => {\n  const { item, id } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <span>\n      <Button className=\"mr-1\" color=\"secondary\" id={\"Tooltip-\" + id}>\n        {item.text}\n      </Button>\n      <Tooltip\n        placement={item.placement}\n        isOpen={tooltipOpen}\n        target={\"Tooltip-\" + id}\n        toggle={toggle}\n      >\n        Tooltip Content!\n      </Tooltip>\n    </span>\n  );\n};\n\nconst tooltip = props => {\n  return (\n    <>\n      {[\n        {\n          placement: \"top\",\n          text: \"Top\"\n        },\n        {\n          placement: \"bottom\",\n          text: \"Bottom\"\n        },\n        {\n          placement: \"left\",\n          text: \"Left\"\n        },\n        {\n          placement: \"right\",\n          text: \"Right\"\n        }\n      ].map((tooltip, i) => {\n        return <TooltipItem key={i} item={tooltip} id={i} />;\n      })}\n    </>\n  );\n};\n\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}